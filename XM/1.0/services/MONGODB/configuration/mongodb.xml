<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration supports_adding_forbidden="true">
    <property>
        <name>mongos_tcp_port</name>
        <value>30000</value>
        <description>
            Port on which mongos listens for incoming client connections.
            The Web Status page is always 1000 higher than this port number.
        </description>
    </property>
    <property>
        <name>db_path</name>
        <value>/data/db</value>
        <description>Path where the mongodb is stored.</description>
        <value-attributes>
            <type>directory</type>
        </value-attributes>
    </property>

    <property require-input="false">
        <name>node_group</name>
        <value></value>
        <description>node_group is conveniece to scale out mongodb shard node.
            for example ,pre-cluster contains node1,node2,node3.add new node list,as node4,node5,node6.
            This value is node1,node2,node3;node4,node5,node6
        </description>
        <value-attributes>
            <empty-value-valid>true</empty-value-valid>
        </value-attributes>
    </property>
    <property>
        <name>mongod_db_content</name>
        <value><![CDATA[
sharding:
   configDB: "{{ config_server }}:8000"
systemLog:
   destination: file
   path: /var/log/mongodb/mongod.log
   logAppend: true
   logRotate: "rename"
storage:
   dbPath: {{ db_path }}/db
   journal:
      enabled: true
   directoryPerDB: true
   syncPeriodSecs: 60
   engine: wiredTiger
   wiredTiger:
      engineConfig:
         cacheSizeGB: 16
         statisticsLogDelaySecs: 0
         journalCompressor: snappy
         directoryForIndexes: true
      collectionConfig:
         blockCompressor: snappy
      indexConfig:
         prefixCompression: true
operationProfiling:
   slowOpThresholdMs: 200
   mode: slowOp
security:
   keyFile: /etc/mongodb/mkeyfile
   authorization: enabled
processManagement:
   fork: true
   pidFilePath: /var/run/mongodb/mongodb.pid
net:
   bindIp: {{ bind_ip }}
   port: 27017
replication:
   oplogSizeMB: 10240
   replSetName: rs1
        ]]>
        </value>
        <description>This is the jinja template for mongod.conf file</description>
    </property>
    <property>
        <name>mongod_config_content</name>
        <value><![CDATA[
sharding:
   clusterRole: configsvr
systemLog:
   destination: file
   path: /var/log/mongodb/mongod.log
   logAppend: true
   logRotate: "rename"
storage:
   dbPath: {{ db_path }}/db
   journal:
      enabled: true
   directoryPerDB: true
   syncPeriodSecs: 60
   engine: wiredTiger
   wiredTiger:
      engineConfig:
         cacheSizeGB: 16
         statisticsLogDelaySecs: 0
         journalCompressor: snappy
         directoryForIndexes: true
      collectionConfig:
         blockCompressor: snappy
      indexConfig:
         prefixCompression: true
operationProfiling:
   slowOpThresholdMs: 200
   mode: slowOp
security:
   keyFile: /etc/mongodb/mkeyfile
   authorization: enabled
processManagement:
   fork: true
   pidFilePath: /var/run/mongodb/mongodb.pid
net:
   bindIp: {{ bind_ip }}
   port: 27017
replication:
   oplogSizeMB: 10240
   replSetName: rs1
        ]]>
        </value>
        <description>This is the jinja template for mongod-config.conf file</description>
    </property>
    <property>
        <name>mongodb_user</name>
        <value>mongodb</value>
        <property-type>USER</property-type>
        <description>User mongodb runs as</description>
        <value-attributes>
            <type>user</type>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="true"/>
    </property>

    <property>
        <name>user_group</name>
        <value>mongodb</value>
        <property-type>GROUP</property-type>
        <description>user group</description>
    </property>
    <property>
        <name>auth</name>
        <value>false</value>
        <description>
            mongodb auth enabled,before enable auth,you must start mongodb cluster successfuly once.
        </description>
        <value-attributes>
            <type>boolean</type>
        </value-attributes>
    </property>
    <property>
        <name>mongodb_admin</name>
        <value>admin</value>
        <description>mongodb login admin user</description>
    </property>
    <property require-input="true">
        <name>mongodb_password</name>
        <value></value>
        <property-type>PASSWORD</property-type>
        <display-name>Database Password</display-name>
        <description>mongodb login admin password</description>
        <value-attributes>
            <type>password</type>
            <overridable>false</overridable>
        </value-attributes>
    </property>
</configuration>
