<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>
    <property require-input="true">
        <name>download_url</name>
        <value>http://yum.example.com/hadoop/druid-1.0.0.tar.gz</value>
        <description>下载路径</description>
    </property>
    <property require-input="true">
        <name>install_dir</name>
        <value>/opt/druid</value>
        <description>安装目录</description>
    </property>

    <!--Heap Settings -->
    <property>
        <name>druid.broker.jvm.heap.memory</name>
        <value>30720</value>
        <value-attributes>
            <type>int</type>
            <minimum>0</minimum>
            <maximum>65536</maximum>
            <unit>MB</unit>
            <increment-step>256</increment-step>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.coordinator.jvm.heap.memory</name>
        <value>10240</value>
        <value-attributes>
            <type>int</type>
            <minimum>0</minimum>
            <maximum>65536</maximum>
            <unit>MB</unit>
            <increment-step>256</increment-step>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.middlemanager.jvm.heap.memory</name>
        <value>256</value>
        <value-attributes>
            <type>int</type>
            <minimum>0</minimum>
            <maximum>65536</maximum>
            <unit>MB</unit>
            <increment-step>256</increment-step>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.historical.jvm.heap.memory</name>
        <value>20480</value>
        <value-attributes>
            <type>int</type>
            <minimum>0</minimum>
            <maximum>65536</maximum>
            <unit>MB</unit>
            <increment-step>256</increment-step>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.overlord.jvm.heap.memory</name>
        <value>512</value>
        <value-attributes>
            <type>int</type>
            <minimum>0</minimum>
            <maximum>65536</maximum>
            <unit>MB</unit>
            <increment-step>256</increment-step>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.router.jvm.heap.memory</name>
        <value>512</value>
        <value-attributes>
            <type>int</type>
            <minimum>0</minimum>
            <maximum>65536</maximum>
            <unit>MB</unit>
            <increment-step>256</increment-step>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>

    <!-- DirectMemorySettings -->
    <property>
        <name>druid.broker.jvm.direct.memory</name>
        <value>1048576</value>
        <depends-on>
            <property>
                <type>druid-broker</type>
                <name>druid.processing.buffer.sizeBytes</name>
            </property>
            <property>
                <type>druid-broker</type>
                <name>druid.processing.numThreads</name>
            </property>
        </depends-on>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.coordinator.jvm.direct.memory</name>
        <value>1048576</value>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.middlemanager.jvm.direct.memory</name>
        <value>1048576</value>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.historical.jvm.direct.memory</name>
        <value>1048576</value>
        <depends-on>
            <property>
                <type>druid-historical</type>
                <name>druid.processing.buffer.sizeBytes</name>
            </property>
            <property>
                <type>druid-historical</type>
                <name>druid.processing.numThreads</name>
            </property>
        </depends-on>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.overlord.jvm.direct.memory</name>
        <value>1048576</value>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.router.jvm.direct.memory</name>
        <value>1048576</value>
        <on-ambari-upgrade add="false"/>
    </property>

    <!-- JavaOpts Tune GC related configs here-->
    <property>
        <name>druid.broker.jvm.opts</name>
        <value>-Duser.timezone=UTC</value>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.coordinator.jvm.opts</name>
        <value>-Duser.timezone=UTC</value>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.middlemanager.jvm.opts</name>
        <value>-Duser.timezone=UTC</value>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.historical.jvm.opts</name>
        <value>-Duser.timezone=UTC</value>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.overlord.jvm.opts</name>
        <value>-Duser.timezone=UTC</value>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid.router.jvm.opts</name>
        <value>-Duser.timezone=UTC</value>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid_user</name>
        <display-name>Druid User</display-name>
        <value>druid</value>
        <property-type>USER</property-type>
        <description></description>
        <value-attributes>
            <type>user</type>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid_log_dir</name>
        <value>/data1/druidio/logs/jvm</value>
        <description></description>
        <on-ambari-upgrade add="false"/>
    </property>
    <property>
        <name>druid_pid_dir</name>
        <value>/var/run/druid</value>
        <display-name>Druid PID dir</display-name>
        <description></description>
        <value-attributes>
            <type>directory</type>
            <editable-only-at-install>true</editable-only-at-install>
            <overridable>false</overridable>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>

    <!-- druid-env.sh -->
    <property>
        <name>content</name>
        <display-name>druid-env template</display-name>
        <description>This is simple template for druid-env.sh file</description>
        <value>
            #!/bin/bash

            # Set DRUID specific environment variables here.

            # The java implementation to use.
            export JAVA_HOME={{java8_home}}
            export PATH=$PATH:$JAVA_HOME/bin
            export DRUID_PID_DIR={{druid_pid_dir}}
            export DRUID_LOG_DIR={{druid_log_dir}}
            export DRUID_CONF_DIR={{druid_conf_dir}}
            export DRUID_LIB_DIR={{druid_home}}/lib
            export HADOOP_CONF_DIR={{hadoop_conf_dir}}

        </value>
        <value-attributes>
            <type>content</type>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>

    <property>
        <name>druid_node_content</name>
        <display-name>druid node.sh template</display-name>
        <description>This is simple template for druid node.sh file</description>
        <value><![CDATA[
            #!/bin/bash -eu

            ## Initializtion script for druid nodes
            ## Runs druid nodes as a daemon and pipes logs to log/ directory

            usage="Usage: node.sh nodeType (start|stop)"

            if [ $# -le 1 ]; then
                echo $usage
                exit 1
            fi

            nodeType=$1
            shift

            startStop=$1
            pid=$DRUID_PID_DIR/$nodeType.pid

            case $startStop in

            (start)

                if [ -f $pid ]; then
                    if kill -0 `cat $pid` > /dev/null 2>&1; then
                        echo $nodeType node running as process `cat $pid`.  Stop it first.
                        exit 1
                    fi
                fi

                #nohup java `cat conf/druid/$nodeType/jvm.config | xargs` -cp conf/druid/_common:conf/druid/$nodeType:lib/* io.druid.cli.Main server $nodeType > log/$nodeType.log &
                nohup java `cat /opt/druid/conf/druid/$nodeType/jvm.config | xargs` -cp /opt/druid/conf/druid/_common:/etc/hadoop:/opt/druid/conf/druid/$nodeType:/opt/druid/lib/* io.druid.cli.Main server $nodeType > $DRUID_LOG_DIR/$nodeType.log&
                nodeType_PID=$!
                echo $nodeType_PID > $pid
                echo "Started $nodeType node ($nodeType_PID)"
                ;;

            (stop)

                if [ -f $pid ]; then
                    TARGET_PID=`cat $pid`
                    if kill -0 $TARGET_PID > /dev/null 2>&1; then
                        echo Stopping process `cat $pid`...
                        kill $TARGET_PID
                    else
                        echo No $nodeType node to stop
                    fi
                    rm -f $pid
                else
                    echo No $nodeType node to stop
                fi
                ;;

            (*)
                echo $usage
                exit 1
                ;;
            esac
        ]]>
        </value>
        <value-attributes>
            <type>content</type>
        </value-attributes>
        <on-ambari-upgrade add="false"/>
    </property>
</configuration>
