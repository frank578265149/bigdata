<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration supports_final="true">
  <property>
    <name>hive.metastore.metrics.enabled</name>
    <value>true</value>
    <value-attributes>
      <type>boolean</type>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>hive.server2.metrics.enabled</name>
    <value>true</value>
    <value-attributes>
      <type>boolean</type>
    </value-attributes>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>hive.service.metrics.reporter</name>
    <value>HADOOP2</value>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>hive.service.metrics.hadoop2.component</name>
    <value>hiveserver2</value>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>hive.async.log.enabled</name>
    <value>false</value>
    <description>Whether to enable Log4j2's asynchronous logging. Asynchronous logging can give significant
      performance improvement as logging will be handled in separate thread that uses LMAX disruptor queue for
      buffering log messages. Refer https://logging.apache.org/log4j/2.x/manual/async.html for benefits and
      drawbacks.
    </description>
    <value-attributes>
      <type>boolean</type>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>hive.security.authenticator.manager</name>
    <value>org.apache.hadoop.hive.ql.security.SessionStateUserAuthenticator</value>
    <description>Hive client authenticator manager class name. The user-defined authenticator class should implement interface org.apache.hadoop.hive.ql.security.HiveAuthenticationProvider.  </description>
    <depends-on>
      <property>
        <type>hive-env</type>
        <name>hive_security_authorization</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>hive.security.authorization.manager</name>
    <value>org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdHiveAuthorizerFactory</value>
    <description>the hive client authorization manager class name.
      The user defined authorization class should implement interface org.apache.hadoop.hive.ql.security.authorization.HiveAuthorizationProvider.  </description>
    <depends-on>
      <property>
        <type>hive-env</type>
        <name>hive_security_authorization</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="false"/>
  </property>
  <property>
    <name>hive.security.authorization.enabled</name>
    <value>false</value>
    <description>enable or disable the Hive client authorization</description>
    <display-name>Enable Authorization</display-name>
    <value-attributes>
      <type>value-list</type>
      <entries>
        <entry>
          <value>true</value>
          <label>True</label>
        </entry>
        <entry>
          <value>false</value>
          <label>False</label>
        </entry>
      </entries>
      <selection-cardinality>1</selection-cardinality>
    </value-attributes>
    <depends-on>
      <property>
        <type>hive-env</type>
        <name>hive_security_authorization</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>hive.conf.restricted.list</name>
    <value>hive.security.authenticator.manager,hive.security.authorization.manager,hive.users.in.admin.role</value>
    <description/>
    <depends-on>
      <property>
        <type>hive-env</type>
        <name>hive_security_authorization</name>
      </property>
    </depends-on>
    <on-ambari-upgrade add="false"/>
  </property>

</configuration>
